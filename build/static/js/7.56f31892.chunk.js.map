{"version":3,"sources":["js/components/common/INPUT.js","js/components/PaswordReset/Password-Reset-Form/PasswordResetForm.js"],"names":["Inputs","props","width","label","refs","placeholder","type","errors","img","icon","name","isError","onClickHandle","Fragment","className","style","borderBottomColor","htmlFor","ref","id","color","src","alt","onClick","PasswordResetForm","useForm","mode","defaultValues","validateCriteriaMode","register","useState","window","innerWidth","size","setSize","setWidth","useLayoutEffect","updateSize","addEventListener","showPassword","setShowPassword","togglePassword","fluid","md","onSubmit","e","preventDefault","required","newpassword","confirmpassword","password","email","to","whyDidYouRender"],"mappings":"uGAAA,0BAoEeA,IAlEf,SAAgBC,GAAQ,IAEpBC,EAWED,EAXFC,MACAC,EAUEF,EAVFE,MACAC,EASEH,EATFG,KACAC,EAQEJ,EARFI,YACAC,EAOEL,EAPFK,KACAC,EAMEN,EANFM,OACAC,EAKEP,EALFO,IACAC,EAIER,EAJFQ,KACAC,EAGET,EAHFS,KACAC,EAEEV,EAFFU,QACAC,EACEX,EADFW,cAEF,OACE,kBAAC,IAAMC,SAAP,KACE,yBACEC,UAAU,eACVC,MAAO,CACLb,QACAc,mBACc,IAAZL,EACIJ,EACE,UACA,wBACF,KAGR,2BAAOU,QAASP,GAAOP,GACvB,6BACA,2BACEe,IAAKd,EACLE,KAAMA,EACNI,KAAMA,EACNL,YAAaA,EACbc,GAAIT,EACJK,MAAO,CACLK,OACc,IAAZT,EACIJ,EACE,UACA,wBACF,MAGTC,EACC,yBAAKa,IAAKb,EAAKc,IAAI,KAEnB,uBACEC,QAASX,EACTE,UAAS,gBAAWL,GACpBM,MAAO,CACLK,OACc,IAAZT,EACIJ,EACE,UACA,uBACF,U,mKCrDpB,SAASiB,EAAkBvB,GAAQ,IAAD,EACHwB,YAAQ,CACnCC,KAAM,SACNC,cAAe,GACfC,qBAAsB,uBAHhBC,EADwB,EACxBA,SAAUtB,EADc,EACdA,OADc,EASRuB,mBAASC,OAAOC,YATR,mBASzBC,EATyB,KASnBC,EATmB,OAUNJ,mBAAS,OAVH,mBAUzB5B,EAVyB,KAUlBiC,EAVkB,KAWhCC,2BAAgB,WACd,SAASC,IACPH,EAAQH,OAAOC,YACfG,EAASJ,OAAOC,YAAc,IAAM,MAAQ,OAE9CD,OAAOO,iBAAiB,SAAUD,GAC9BN,OAAOC,YAAc,KACvBK,MAED,IApB6B,MAsBQP,mBAAS,OAtBjB,mBAsBzBS,EAtByB,KAsBXC,EAtBW,KAuB1BC,EAAiB,kBACrBD,EAAiC,QAAjBD,EAAyB,YAAc,QACzD,OACE,kBAAC,IAAM1B,SAAP,KACE,kBAAC,IAAD,CAAW6B,OAAO,EAAM5B,UAAU,iCAChC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,UAAU,iCACb,yBAAKO,IAAI,eAAeP,UAAU,YAAYQ,IAAI,MAEpD,kBAAC,IAAD,CAAKqB,GAAI,EAAG7B,UAAU,eACpB,yBACEO,IAAG,cAASY,GAAQ,IAAM,iBAAmB,cAA1C,QACHX,IAAI,MAGR,kBAAC,IAAD,CAAKqB,GAAI,EAAG7B,UAAU,0BACpB,yBAAKO,IAAI,eAAeP,UAAU,qBAAqBQ,IAAI,KAC3D,0BAAMsB,SAlCO,SAAAC,GACrBA,EAAEC,mBAkCQ,kBAAC,IAAD,CACE5C,MAAOA,EACPG,YAAY,6BACZF,MAAO,eACPO,KAAK,cACLJ,KAAuB,QAAjBiC,EAAyB,WAAa,OAC5CnC,KAAMyB,EAAS,CAAEkB,UAAU,IAC3BtC,KAAM8B,EACNhC,OAAQA,EAAOyC,YACfrC,SAAS,EACTC,cAAe6B,IAEjB,kBAAC,IAAD,CACEvC,MAAOA,EACPG,YAAY,iCACZF,MAAO,mBACPO,KAAK,kBACLJ,KAAuB,QAAjBiC,EAAyB,WAAa,OAC5CnC,KAAMyB,EAAS,CAAEkB,UAAU,IAC3BtC,KAAM8B,EACNhC,OAAQA,EAAO0C,gBACftC,SAAS,EACTC,cAAe6B,IAEjB,8BACGlC,EAAO2C,UAAY3C,EAAO4C,MAAQ,sBAAwB,IAE7D,4BAAQpC,MAAO,CAAEb,UACf,kBAAC,IAAD,CAAMkD,GAAG,qBAAT,eAShB5B,EAAkB6B,iBAAkB,EACrB7B","file":"static/js/7.56f31892.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Assets/input.scss\";\nfunction Inputs(props) {\n  const {\n    width,\n    label,\n    refs,\n    placeholder,\n    type,\n    errors,\n    img,\n    icon,\n    name,\n    isError,\n    onClickHandle\n  } = props;\n  return (\n    <React.Fragment>\n      <div\n        className=\"COMMON_INPUT\"\n        style={{\n          width,\n          borderBottomColor:\n            isError === true\n              ? errors\n                ? \"#e26868\"\n                : \"rgba(255,255,255,.25)\"\n              : \"\"\n        }}\n      >\n        <label htmlFor={name}>{label}</label>\n        <br />\n        <input\n          ref={refs}\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          id={name}\n          style={{\n            color:\n              isError === true\n                ? errors\n                  ? \"#e26868\"\n                  : \"rgba(255,255,255,.25)\"\n                : \"\"\n          }}\n        />\n        {img ? (\n          <img src={img} alt=\"\" />\n        ) : (\n          <i\n            onClick={onClickHandle}\n            className={`fa fa-${icon}`}\n            style={{\n              color:\n                isError === true\n                  ? errors\n                    ? \"#e26868\"\n                    : \"rgba(255,255,255,.5)\"\n                  : \"\"\n            }}\n          ></i>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Inputs;\n","import React, { useState, useLayoutEffect } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Input from \"../../common/INPUT\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport \"./Assets/passwordResetForm.scss\";\nfunction PasswordResetForm(props) {\n  const { register, errors } = useForm({\n    mode: \"onBlur\",\n    defaultValues: {},\n    validateCriteriaMode: \"firstErrorDetected\"\n  });\n  const onSubmitHandle = e => {\n    e.preventDefault();\n  };\n  const [size, setSize] = useState(window.innerWidth);\n  const [width, setWidth] = useState(\"60%\");\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize(window.innerWidth);\n      setWidth(window.innerWidth <= 768 ? \"85%\" : \"60%\");\n    }\n    window.addEventListener(\"resize\", updateSize);\n    if (window.innerWidth <= 768) {\n      updateSize();\n    }\n  }, []);\n\n  const [showPassword, setShowPassword] = useState(\"eye\");\n  const togglePassword = () =>\n    setShowPassword(showPassword === \"eye\" ? \"eye-slash\" : \"eye\");\n  return (\n    <React.Fragment>\n      <Container fluid={true} className=\"RESET_PASSWORD_FORM_CONTAINER\">\n        <Row>\n          <Col className=\"MOBILE_TITLE d-flex d-md-none\">\n            <img src=\"img/Logo.png\" className=\"img-fluid\" alt=\"\" />\n          </Col>\n          <Col md={6} className=\"COVER_TITLE\">\n            <img\n              src={`img/${size <= 786 ? \"mobileCover@3x\" : \"LoginImg@3x\"}.png`}\n              alt=\"\"\n            />\n          </Col>\n          <Col md={6} className=\"LOGIN_FORM p-md-0 py-3\">\n            <img src=\"img/Logo.png\" className=\"d-md-inline d-none\" alt=\"\" />\n            <form onSubmit={onSubmitHandle}>\n              <Input\n                width={width}\n                placeholder=\"Enter New Password Here...\"\n                label={\"New Password\"}\n                name=\"newpassword\"\n                type={showPassword === \"eye\" ? \"password\" : \"text\"}\n                refs={register({ required: true })}\n                icon={showPassword}\n                errors={errors.newpassword}\n                isError={true}\n                onClickHandle={togglePassword}\n              />\n              <Input\n                width={width}\n                placeholder=\"Enter Confirm Password Here...\"\n                label={\"Confirm Password\"}\n                name=\"confirmpassword\"\n                type={showPassword === \"eye\" ? \"password\" : \"text\"}\n                refs={register({ required: true })}\n                icon={showPassword}\n                errors={errors.confirmpassword}\n                isError={true}\n                onClickHandle={togglePassword}\n              />\n              <span>\n                {errors.password || errors.email ? \"Invalid Credentials\" : \"\"}\n              </span>\n              <button style={{ width }}>\n                <Link to=\"/password-reseted\">Reset</Link>\n              </button>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\nPasswordResetForm.whyDidYouRender = true;\nexport default PasswordResetForm;\n"],"sourceRoot":""}