{"version":3,"sources":["js/component/Signup/Signup.jsx","js/redux/actions/Inputs.js","js/component/common/InputFields.jsx","js/component/common/LeftCover.jsx"],"names":["Signup","props","setStateHandler","val","setState","errors","name","HandleChanging","e","InputValidate","state","passwordHandler","event","target","className","split","passIcon","handleTNC","TNC","checked","onSubmitHandler","preventDefault","username","email","password","Fragment","src","alt","onSubmit","this","label","type","stateHandler","htmlFor","id","placeholder","onChange","onClick","to","style","backgroundColor","Component","withRouter","persist","value","length","creditCardNumber","validCard","test","validEmailRegex","Fullname","phoneNumber","validPhone","Inputs","types","width","divW","place","icon","undefined","LeftCover"],"mappings":"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","file":"static/js/15.fd8f8be9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport LeftCover from \"../common/LeftCover\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport Inputs from \"../common/InputFields\";\nimport { InputValidate } from \"../../redux/actions/Inputs\";\nimport axios from \"axios\";\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            email: \"\",\n            passIcon: \"fa-eye\",\n            errors: {\n                username: null,\n                password: null,\n                email: null\n            },\n            TNC: false\n        };\n    }\n    setStateHandler = val => {\n        this.setState({\n            errors: val.errors,\n            [val.name]: val[val.name]\n        })\n    }\n    HandleChanging = e => {\n        let errors = InputValidate(e, this.state);\n        this.setState(errors);\n    }\n    passwordHandler = event => {\n        const classContain = event.target.className.split(\" \")[1];\n        if (classContain === \"fa-eye\") {\n            this.setState({\n                passIcon: \"fa-eye-slash\"\n            })\n        }\n        else {\n            this.setState({\n                passIcon: \"fa-eye\"\n            })\n        }\n    }\n    handleTNC = event => {\n        this.setState({\n            TNC: event.target.checked\n        })\n    }\n    onSubmitHandler = event => {\n        event.preventDefault();\n        if (this.state.errors.username === \"\" && this.state.errors.email === \"\" && this.state.errors.password === \"\") {\n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container-fluid SignUp\">\n                    <div className=\"row\">\n                        <LeftCover />\n                        <div className=\"col-md-6 col-12 SignUpForm\">\n                            <div className=\"content\">\n                                <img src=\"./img/logo.png\" className=\"logo\" alt=\"\" />\n                                <form onSubmit={this.onSubmitHandler}>\n                                    <Inputs label=\"Username\" name=\"username\" type=\"text\" state={this.state} stateHandler={this.setStateHandler} />\n                                    {this.state.errors.username !== \"\" ? <span className=\"error text-danger\">{this.state.errors.username}</span> : \"\"}\n                                    <div className=\"inputs\">\n                                        <Inputs label=\"Email\" name=\"email\" type=\"email\" state={this.state} stateHandler={this.setStateHandler} />\n                                    </div>\n                                    {this.state.errors.email !== \"\" ? <span className=\"error text-danger\">{this.state.errors.email}</span> : \"\"}\n                                    <div className=\"inputs\">\n                                        <label htmlFor=\"password\">Password</label>\n                                        <div className=\"input-group\">\n                                            <input type={this.state.passIcon === \"fa-eye\" ? \"password\" : \"text\"} name=\"password\" id=\"password\" placeholder=\"Enter Your Password Here\" onChange={this.HandleChanging} />\n                                            <i className={`fas ${this.state.passIcon}`} onClick={this.passwordHandler}></i>\n                                        </div>\n                                    </div>\n                                    {this.state.errors.password !== \"\" ? <span className=\"error text-danger\">{this.state.errors.password}</span> : \"\"}\n                                    {/* <button>Register</button> */}\n                                    <Link to=\"/step\">Register</Link >\n                                </form>\n                                <div className=\"TNC\">\n                                    <input type=\"checkbox\" name=\"terms\" id=\"terms\" onChange={this.handleTNC} />\n                                    <label htmlFor=\"terms\" id=\"terms\"><div style={{ backgroundColor: this.state.TNC === true ? \"#2AABE4\" : \"transparent\" }}></div></label>\n                                    <label htmlFor=\"terms\" className=\"Terms\"><u>I agree with terms and conditions.</u></label>\n                                </div>\n                                <span className=\"register\">Already have an account? <u>Login</u></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(Signup);","import {\n    validEmailRegex,\n    validCard,\n    validPhone\n} from \"../constant/index\";\nexport const InputValidate = (event, state) => {\n    event.persist();\n    const {\n        name,\n        value\n    } = event.target;\n    let errors = state.errors;\n    switch (name) {\n        case \"username\":\n            errors.username = value.length < 6 ? \"Username Must Be Greater Than 5 Character!\" : \"\";\n            break;\n        case \"creditCardNumber\":\n            errors.creditCardNumber = validCard.test(value) ? \"\" : \"Please Enter Valid Card Number\";\n            break;\n        case 'email':\n            errors.email =\n                validEmailRegex.test(value) ?\n                '' :\n                'Please Enter Valid Email!';\n            break;\n        case 'password':\n            errors.password =\n                value.length < 6 ?\n                'Password must be 6 characters long!' :\n                '';\n            break;\n        case \"Fullname\":\n            errors.Fullname = value.length < 6 ? \"Username Must Be Greater Than 5 Character!\" : \"\";\n            break;\n        case \"phoneNumber\":\n            errors.phoneNumber =\n                validPhone.test(value) ? \"\" : \"Please Enter Valid Phone Number!\"\n            break;\n        default:\n            errors[name] = value.length >= 1 ? \"\" : \"Fill The Field!\";\n            break;\n    }\n    return {\n        errors,\n        [name]: value,\n        name: name\n    };\n}","import React from 'react';\nimport { InputValidate } from \"../../redux/actions/Inputs\";\nfunction Inputs(props) {\n    const { name, label, state, stateHandler, types, width, divW, place, icon } = props;\n    let errors = state.errors;\n    const HandleChanging = e => {\n        let errors = InputValidate(e, state);\n        stateHandler(errors);\n    }\n    return (\n        <div className=\"inputs\" style={{ width: divW }}>\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group\">\n                <input type={types} name={name} id={name} placeholder={place === \"\" || place === null || place === undefined ? `Enter Your ${label} Here` : place} style={{ width: width }} onChange={HandleChanging} />\n                <i className={icon === undefined ? errors[name] === \"\" ? \"fas fa-check\" : \"fas fa-times\" : icon}></i>\n            </div>\n        </div>\n    )\n}\nexport default Inputs;","import React from 'react';\nfunction LeftCover() {\n    return (\n        <React.Fragment>\n            <div className=\"col-6 d-md-block d-none LoginLeft\">\n                <div className=\"row\">\n                    <div className=\"col-10 CoverLogin\">\n                        <img src=\"./img/login/main.png\" className=\"img-fluid\" alt=\"\" />\n                    </div>\n                    <div className=\"col-2 pattern\">\n\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\nexport default LeftCover;"],"sourceRoot":""}